"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const mongoose = require("mongoose");
const util = require("util");
const gridfs_stream_1 = require("../shared/gridfs-stream");
const mongoose_adapter_1 = require("./mongoose-adapter");
/**
 * Gridfs adapter using mongoose for connection purposes
 *
 * @deprecated
 * @export
 * @class MongooseGridFsAdapter
 * @extends {HapinessMongoAdapter}
 */
class MongooseGridFsAdapter extends mongoose_adapter_1.MongooseAdapter {
    static getInterfaceName() {
        return 'mongoose-gridfs';
    }
    constructor(options) {
        super(options);
        util.deprecate((() => null), 'MongooseGridFsAdapter is deprecated use MongooseGridfsBucketAdapter instead.')();
        this.on('connected', () => {
            this._gridfs = this._createGridFsStream(this._connection.db, mongoose.mongo);
        });
    }
    _createGridFsStream(db, mongo) {
        return gridfs_stream_1.CreateGridFsStream(db, mongo);
    }
    getLibrary() {
        return this._gridfs;
    }
}
exports.MongooseGridFsAdapter = MongooseGridFsAdapter;
//# sourceMappingURL=mongoose-gridfs.js.map