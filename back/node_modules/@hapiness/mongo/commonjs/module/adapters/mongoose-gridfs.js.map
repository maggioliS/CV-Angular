{"version":3,"file":"mongoose-gridfs.js","sourceRoot":"","sources":["../../../../src/module/adapters/mongoose-gridfs.ts"],"names":[],"mappings":";;AAAA,qCAAqC;AACrC,6BAA6B;AAE7B,2DAA2E;AAC3E,yDAAqD;AAErD;;;;;;;GAOG;AACH,2BAAmC,SAAQ,kCAAe;IAK/C,MAAM,CAAC,gBAAgB;QAC1B,OAAO,iBAAiB,CAAC;IAC7B,CAAC;IAED,YAAY,OAAO;QACf,KAAK,CAAC,OAAO,CAAC,CAAA;QACd,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,8EAA8E,CAAC,EAAE,CAAC;QAE/G,IAAI,CAAC,EAAE,CAAC,WAAW,EAAE,GAAG,EAAE;YACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;QACjF,CAAC,CAAC,CAAC;IACP,CAAC;IAES,mBAAmB,CAAC,EAAE,EAAE,KAAK;QACnC,OAAO,kCAAkB,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;IACzC,CAAC;IAEM,UAAU;QACb,OAAY,IAAI,CAAC,OAAO,CAAC;IAC7B,CAAC;CACJ;AAzBD,sDAyBC","sourcesContent":["import * as mongoose from 'mongoose';\nimport * as util from 'util';\n\nimport { CreateGridFsStream, GridFsStream } from '../shared/gridfs-stream';\nimport { MongooseAdapter } from './mongoose-adapter';\n\n/**\n * Gridfs adapter using mongoose for connection purposes\n *\n * @deprecated\n * @export\n * @class MongooseGridFsAdapter\n * @extends {HapinessMongoAdapter}\n */\nexport class MongooseGridFsAdapter extends MongooseAdapter {\n\n    private _gridfs: GridFsStream.Grid;\n    protected _client: any;\n\n    public static getInterfaceName(): string {\n        return 'mongoose-gridfs';\n    }\n\n    constructor(options) {\n        super(options)\n        util.deprecate((() => null), 'MongooseGridFsAdapter is deprecated use MongooseGridfsBucketAdapter instead.')();\n\n        this.on('connected', () => {\n            this._gridfs = this._createGridFsStream(this._connection.db, mongoose.mongo);\n        });\n    }\n\n    protected _createGridFsStream(db, mongo) {\n        return CreateGridFsStream(db, mongo);\n    }\n\n    public getLibrary<T = GridFsStream.Grid>(): T {\n        return <any>this._gridfs;\n    }\n}\n"]}