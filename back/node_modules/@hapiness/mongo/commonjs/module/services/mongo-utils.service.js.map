{"version":3,"file":"mongo-utils.service.js","sourceRoot":"","sources":["../../../../src/module/services/mongo-utils.service.ts"],"names":[],"mappings":";;AAAA,qCAAmC;AAEnC;IAEW,MAAM,CAAC,UAAU,CAAC,EAAU;QAC/B,IAAI;YACA,OAAO,IAAI,kBAAQ,CAAC,EAAE,CAAC,CAAC;SAC3B;QAAC,OAAO,GAAG,EAAE;YACV,OAAO,SAAS,CAAC;SACpB;IACL,CAAC;IAEM,MAAM,CAAC,mBAAmB,CAAC,GAAQ,EAAE,MAAe;QACvD,OAAO,MAAM,CAAC,OAAO,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE;YAC1D,MAAM,IAAI,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAC1D,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC;gBAC7F,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,mBAAmB,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;gBACjE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,EAAE,GAAG,CAAC,CAAC;QAC9C,CAAC,EAAE,EAAE,CAAC,CAAC;IACX,CAAC;IAED,MAAM,CAAC,mBAAmB,CAAC,SAAc;QACrC,IAAI,SAAS,CAAC,EAAE,IAAI,SAAS,CAAC,GAAG,EAAE;YAC/B,SAAS,CAAC,GAAG,GAAG,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,IAAI,SAAS,CAAC,GAAG,CAAC,CAAC;YACrE,OAAO,SAAS,CAAC,EAAE,CAAC;SACvB;QAED,OAAO,SAAS,CAAC;IACrB,CAAC;IAED,MAAM,CAAC,qBAAqB,CAAC,MAAgB;QACzC,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;YAC3B,OAAO,EAAE,CAAC;SACb;QAED,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACnF,CAAC;CACJ;AAnCD,gCAmCC","sourcesContent":["import { ObjectID } from 'mongodb';\n\nexport class MongoUtils {\n\n    public static toObjectId(id: string) {\n        try {\n            return new ObjectID(id);\n        } catch (err) {\n            return undefined;\n        }\n    }\n\n    public static prepareUpdateObject(dto: any, prefix?: string): any {\n        return Object.entries(dto || {}).reduce((acc, [key, value]) => {\n            const _key = [prefix, key].filter(item => item).join('.');\n            return !Array.isArray(value) && value && typeof value === 'object' && Object.keys(value).length ?\n                Object.assign(MongoUtils.prepareUpdateObject(value, _key), acc) :\n                Object.assign({ [_key]: value }, acc);\n        }, {});\n    }\n\n    static filterFindCondition(condition: any): any {\n        if (condition.id || condition._id) {\n            condition._id = MongoUtils.toObjectId(condition.id || condition._id);\n            delete condition.id;\n        }\n\n        return condition;\n    }\n\n    static fieldsStringFromArray(fields: string[]): string {\n        if (!fields || !fields.length) {\n            return '';\n        }\n\n        return fields.filter(f => !!f && f.trim().length).map(f => f.trim()).join(' ');\n    }\n}\n"]}