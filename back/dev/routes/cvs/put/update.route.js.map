{"version":3,"file":"update.route.js","sourceRoot":"","sources":["../../../../src/routes/cvs/put/update.route.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,yCAAuD;AACvD,6CAAiD;AAEjD,8CAAqC;AAErC,gDAA6C;AAC7C,8CAA6C;AAqB7C,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IACzB;;;;OAIG;IACH,YAAoB,WAAuB,EAAU,OAAsB;QAAvD,gBAAW,GAAX,WAAW,CAAY;QAAU,YAAO,GAAP,OAAO,CAAe;IAC3E,CAAC;IAED;;;OAGG;IACH,KAAK,CAAC,OAAgB;QAClB,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,CACtE,eAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CACjC,CAAC;IACN,CAAC;CACJ,CAAA;AAlBY,gBAAgB;IAnB5B,YAAK,CAAC;QACH,IAAI,EAAE,kBAAkB;QACxB,MAAM,EAAE,KAAK;QACb,MAAM,EAAE;YACJ,OAAO,EAAE;gBACL,MAAM,EAAE,MAAM;gBACd,KAAK,EAAE,kBAAkB;gBACzB,KAAK,EAAE,IAAI;aACd;YACD,QAAQ,EAAE;gBACN,MAAM,EAAE;oBACJ,GAAG,EAAE,qBAAW;iBACnB;aACJ;YACD,WAAW,EAAE,eAAe;YAC5B,KAAK,EAAE,iEAAiE;YACxE,IAAI,EAAE,CAAE,KAAK,EAAE,IAAI,CAAE;SACxB;KACJ,CAAC;qCAOmC,qBAAU,EAAmB,sBAAa;GANlE,gBAAgB,CAkB5B;AAlBY,4CAAgB","sourcesContent":["import { OnPut, Request, Route } from '@hapiness/core';\nimport { LoggerService } from '@hapiness/logger';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport {Cv} from '../../../interfaces';\nimport {CvsService} from '../../../services';\nimport {CV_RESPONSE} from '../../../schemas';\n\n@Route({\n    path: '/api/cvs/{titre}',\n    method: 'PUT',\n    config: {\n        payload: {\n            output: 'data',\n            allow: 'application/json',\n            parse: true\n        },\n        response: {\n            status: {\n                200: CV_RESPONSE\n            }\n        },\n        description: 'Update one cv',\n        notes: 'Update the cv for the given id in path parameter and returns it',\n        tags: [ 'api', 'cv' ]\n    }\n})\nexport class PutUpdateCvRoute implements OnPut {\n    /**\n     * Class constructor\n     * @param _peopleService\n     * @param _logger\n     */\n    constructor(private _cvsService: CvsService, private _logger: LoggerService) {\n    }\n\n    /**\n     * OnPut implementation\n     * @param request\n     */\n    onPut(request: Request): Observable<Cv> {\n        return this._cvsService.update(request.params.titre, request.payload).pipe(\n            tap(_ => this._logger.info(_))\n        );\n    }\n}\n"]}