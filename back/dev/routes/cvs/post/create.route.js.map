{"version":3,"file":"create.route.js","sourceRoot":"","sources":["../../../../src/routes/cvs/post/create.route.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,yCAA6E;AAC7E,6CAAiD;AAEjD,8CAAqC;AACrC,gDAA+C;AAC/C,8CAA6C;AAqB7C,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAC1B;;;;OAIG;IACH,YAAoB,WAAuB,EAAU,OAAsB;QAAvD,gBAAW,GAAX,WAAW,CAAY;QAAU,YAAO,GAAP,OAAO,CAAe;IAC3E,CAAC;IAED;;;OAGG;IACH,MAAM,CAAC,OAAgB;QACnB,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,CAChD,eAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CACjC,CAAC;IACN,CAAC;CACJ,CAAA;AAlBY,iBAAiB;IAnB7B,YAAK,CAAC;QACH,IAAI,EAAE,UAAU;QAChB,MAAM,EAAE,MAAM;QACd,MAAM,EAAE;YACJ,OAAO,EAAE;gBACL,MAAM,EAAE,MAAM;gBACd,KAAK,EAAE,kBAAkB;gBACzB,KAAK,EAAE,IAAI;aACd;YACD,QAAQ,EAAE;gBACN,MAAM,EAAE;oBACJ,GAAG,EAAE,qBAAW;iBACnB;aACJ;YACD,WAAW,EAAE,eAAe;YAC5B,KAAK,EAAE,gCAAgC;YACvC,IAAI,EAAE,CAAE,KAAK,EAAE,IAAI,CAAE;SACxB;KACJ,CAAC;qCAOmC,qBAAU,EAAmB,sBAAa;GANlE,iBAAiB,CAkB7B;AAlBY,8CAAiB","sourcesContent":["import { HTTPHandlerResponse, OnPost, Request, Route } from '@hapiness/core';\nimport { LoggerService } from '@hapiness/logger';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { CvsService } from '../../../services';\nimport {CV_RESPONSE} from '../../../schemas';\n\n@Route({\n    path: '/api/cvs',\n    method: 'POST',\n    config: {\n        payload: {\n            output: 'data',\n            allow: 'application/json',\n            parse: true\n        },\n        response: {\n            status: {\n                201: CV_RESPONSE\n            }\n        },\n        description: 'Create one cv',\n        notes: 'Create a new cv and returns it',\n        tags: [ 'api', 'cv' ]\n    }\n})\nexport class PostCreateCvRoute implements OnPost {\n    /**\n     * Class constructor\n     * @param _peopleService\n     * @param _logger\n     */\n    constructor(private _cvsService: CvsService, private _logger: LoggerService) {\n    }\n\n    /**\n     * OnPost implementation\n     * @param request\n     */\n    onPost(request: Request): Observable<HTTPHandlerResponse> {\n        return this._cvsService.create(request.payload).pipe(\n            tap(_ => this._logger.info(_))\n        );\n    }\n}\n"]}